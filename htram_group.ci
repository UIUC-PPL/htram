module htram_group{
  readonly CProxy_HTram tram_proxy;
  readonly CProxy_HTramRecv nodeGrpProxy;
  readonly CProxy_HTramNodeGrp srcNodeGrpProxy;
  message HTramMessage {
    itemT *buffer;
    int next; 
  };

  message HTramNodeMessage {
    int *buffer;
    int *offset;
  };
//#define SRC_GROUPING
  group HTram {
    entry HTram(CkGroupID, int, bool, double);
    entry HTram(CkGroupID gid, CkCallback cb);
    entry void insertValue(int value, int destPE);
    entry void tflush();
#ifdef SRC_GROUPING
    entry void receivePerPE(HTramMessage*);
#else
    entry void receivePerPE(HTramNodeMessage*);
#endif
    entry void stop_periodic_flush();
  };

  nodegroup HTramNodeGrp {
    entry HTramNodeGrp();
  };

  nodegroup HTramRecv {
    entry HTramRecv();
    entry [expedited] void receive(HTramMessage*);
  }
};
