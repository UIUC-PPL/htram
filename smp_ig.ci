mainmodule smp_ig {
  include "packet.h";

  extern module htram_group;

  // Handle to the test driver (chare)
  readonly CProxy_TestDriver               driverProxy;
  // Number of chares per PE
  readonly int            l_num_req;
  readonly int            lnum_counts;

  mainchare TestDriver {
    entry TestDriver (CkArgMsg *args);
    entry [reductiontarget] void start();
    entry [reductiontarget] void startVerificationPhase();
    entry void completeRun();
//    entry [reductiontarget] void startRunningPhase();
    entry [reductiontarget] void reportErrors(CmiInt8 globalNumErrors);
    entry [reductiontarget] void ReceiveMsgStats(double stats[n], int n);
    entry [reductiontarget] void printLatency(double latency);
  };

  group Updater {
    entry Updater(CkGroupID req_gid, CkGroupID resp_gid);
    // This method generates keys that index into the global table.
    // Each generated key is submitted to the communication library
    entry void preGenerateUpdates(int buf_type, int buf_size, int ty);
    entry [reductiontarget] void generateUpdates(int idx);
    entry [threaded] void generateUpdatesVerify();
    entry void break_loop(int idx);
    entry void lastFlush();
    entry void requestData(const packet1& key);
    entry void responseData(const packet1& key);
    entry void insertData2(const CmiUInt8 &key);
    entry void getAvgLatency();
    // Used for verification
    entry [reductiontarget] void checkErrors();
  };
};
