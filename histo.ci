mainmodule histo {
#ifdef TRAM_NON_SMP
  extern module tramNonSmp;
  group tramNonSmp<int>;
  message tramNonSmpMsg<int>;

  readonly CProxy_tramNonSmp<int> tram_proxy;

#elif TRAM_SMP

#if GROUPBY
  extern module htram_group;
#elif SORTBY
  extern module htram_sort;
#else
  extern module htram;
#endif

#endif

  // Handle to the test driver (chare)
  readonly CProxy_TestDriver               driverProxy;
  // Number of chares per PE
  readonly int            l_num_ups;
  readonly int            lnum_counts;

  mainchare TestDriver {
    entry TestDriver (CkArgMsg *args);
    entry [reductiontarget] void start();
    entry [reductiontarget] void startVerificationPhase();
    entry [reductiontarget] void reportErrors(CmiInt8 globalNumErrors);
    entry [reductiontarget] void ReceiveMsgStats(double stats[n], int n);
  };

  group Updater {
    entry Updater();
    // This method generates keys that index into the global table.
    // Each generated key is submitted to the communication library
    entry void preGenerateUpdates(bool use_src_grp, bool use_arc_agg, bool use_per_destpe);
    entry [threaded,reductiontarget] void generateUpdates();
    entry [threaded] void generateUpdatesVerify();
    entry void insertData(const CmiUInt8 &key);
    entry void insertData2(const CmiUInt8 &key);
    // Used for verification
    entry [reductiontarget] void checkErrors();
  };
};
