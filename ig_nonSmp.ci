mainmodule ig_nonSmp {
  include "packet.h";
  
  extern module tramNonSmp;
  group tramNonSmp<packet1>;
  group tramNonSmp<packet2>;
  message tramNonSmpMsg<packet1>;
  message tramNonSmpMsg<packet2>;

  readonly CProxy_tramNonSmp<packet1> tram_request_proxy;
  readonly CProxy_tramNonSmp<packet2> tram_response_proxy;

  // Handle to the test driver (chare)
  readonly CProxy_TestDriver               driverProxy;
  // Number of chares per PE
  readonly int            ltab_siz;
  readonly int            l_num_req;

  mainchare TestDriver {
    entry TestDriver (CkArgMsg *args);
    entry [reductiontarget] void start();
    entry [reductiontarget] void startVerificationPhase();
    entry [reductiontarget] void reportErrors(CmiInt8 globalNumErrors);
  };

  array [1D] Updater {
    entry Updater();
    // This method generates keys that index into the global table.
    // Each generated key is submitted to the communication library
    entry [threaded] void generateUpdates();
    entry void myRequest(const packet1& p);
    entry void myResponse(const packet2& p);
    //entry void myRequest(const packet1& p);
    //entry void myResponse(const packet2& p);
    // Used for verification
    entry [reductiontarget] void checkErrors();
  };
};
